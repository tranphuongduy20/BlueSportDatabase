// <auto-generated />
using BlueSport.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlueSport.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlueSport.Models.Banner", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("typeId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("BlueSport.Models.BannerType", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("BannerTypes");
                });

            modelBuilder.Entity("BlueSport.Models.Brand", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("BlueSport.Models.Category", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BlueSport.Models.Color", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("BlueSport.Models.Contact", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cusEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cusPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("topicId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("topicId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("BlueSport.Models.Product", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("brandId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("installment")
                        .HasColumnType("int");

                    b.Property<bool>("isSoldOut")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("priceCurrent")
                        .HasColumnType("int");

                    b.Property<decimal>("priceOld")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("saleOff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("brandId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BlueSport.Models.ProductDetail", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("productId");

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("BlueSport.Models.ProductImage", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("productId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("BlueSport.Models.ProductMapCate", b =>
                {
                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cateId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("productId", "cateId");

                    b.HasIndex("cateId");

                    b.ToTable("ProductMapCates");
                });

            modelBuilder.Entity("BlueSport.Models.ProductMapSize", b =>
                {
                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("sizeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("productId", "sizeId");

                    b.HasIndex("sizeId");

                    b.ToTable("ProductMapSizes");
                });

            modelBuilder.Entity("BlueSport.Models.Promotion", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("productId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("BlueSport.Models.PromotionDetail", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isMore")
                        .HasColumnType("bit");

                    b.Property<bool>("isOnline")
                        .HasColumnType("bit");

                    b.Property<string>("promotionId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("promotionId");

                    b.ToTable("PromotionDetails");
                });

            modelBuilder.Entity("BlueSport.Models.Size", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("BlueSport.Models.SizeMapColor", b =>
                {
                    b.Property<string>("colorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("sizeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("colorId", "sizeId");

                    b.HasIndex("sizeId");

                    b.ToTable("SizeMapColors");
                });

            modelBuilder.Entity("BlueSport.Models.Topic", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("BlueSport.Models.Banner", b =>
                {
                    b.HasOne("BlueSport.Models.BannerType", "type")
                        .WithMany("banners")
                        .HasForeignKey("typeId");

                    b.Navigation("type");
                });

            modelBuilder.Entity("BlueSport.Models.Contact", b =>
                {
                    b.HasOne("BlueSport.Models.Topic", "topic")
                        .WithMany("contacts")
                        .HasForeignKey("topicId");

                    b.Navigation("topic");
                });

            modelBuilder.Entity("BlueSport.Models.Product", b =>
                {
                    b.HasOne("BlueSport.Models.Brand", "brand")
                        .WithMany("products")
                        .HasForeignKey("brandId");

                    b.Navigation("brand");
                });

            modelBuilder.Entity("BlueSport.Models.ProductDetail", b =>
                {
                    b.HasOne("BlueSport.Models.Product", "product")
                        .WithMany("productDetails")
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("BlueSport.Models.ProductImage", b =>
                {
                    b.HasOne("BlueSport.Models.Product", "product")
                        .WithMany("productImages")
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("BlueSport.Models.ProductMapCate", b =>
                {
                    b.HasOne("BlueSport.Models.Category", "category")
                        .WithMany("productMapCates")
                        .HasForeignKey("cateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlueSport.Models.Product", "product")
                        .WithMany("productMapCates")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("product");
                });

            modelBuilder.Entity("BlueSport.Models.ProductMapSize", b =>
                {
                    b.HasOne("BlueSport.Models.Product", "product")
                        .WithMany("productMapSizes")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlueSport.Models.Size", "size")
                        .WithMany("productMapSizes")
                        .HasForeignKey("sizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("size");
                });

            modelBuilder.Entity("BlueSport.Models.Promotion", b =>
                {
                    b.HasOne("BlueSport.Models.Product", "product")
                        .WithMany("promotions")
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("BlueSport.Models.PromotionDetail", b =>
                {
                    b.HasOne("BlueSport.Models.Promotion", "promotion")
                        .WithMany("promotionDetails")
                        .HasForeignKey("promotionId");

                    b.Navigation("promotion");
                });

            modelBuilder.Entity("BlueSport.Models.SizeMapColor", b =>
                {
                    b.HasOne("BlueSport.Models.Color", "color")
                        .WithMany("sizeMapColors")
                        .HasForeignKey("colorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlueSport.Models.Size", "size")
                        .WithMany("sizeMapColors")
                        .HasForeignKey("sizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("color");

                    b.Navigation("size");
                });

            modelBuilder.Entity("BlueSport.Models.BannerType", b =>
                {
                    b.Navigation("banners");
                });

            modelBuilder.Entity("BlueSport.Models.Brand", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("BlueSport.Models.Category", b =>
                {
                    b.Navigation("productMapCates");
                });

            modelBuilder.Entity("BlueSport.Models.Color", b =>
                {
                    b.Navigation("sizeMapColors");
                });

            modelBuilder.Entity("BlueSport.Models.Product", b =>
                {
                    b.Navigation("productDetails");

                    b.Navigation("productImages");

                    b.Navigation("productMapCates");

                    b.Navigation("productMapSizes");

                    b.Navigation("promotions");
                });

            modelBuilder.Entity("BlueSport.Models.Promotion", b =>
                {
                    b.Navigation("promotionDetails");
                });

            modelBuilder.Entity("BlueSport.Models.Size", b =>
                {
                    b.Navigation("productMapSizes");

                    b.Navigation("sizeMapColors");
                });

            modelBuilder.Entity("BlueSport.Models.Topic", b =>
                {
                    b.Navigation("contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
